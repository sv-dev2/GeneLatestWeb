
@model InsuranceClaim.Models.RiskDetailModel
@{
    ViewBag.Title = "License Detail";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";

    var customerDetail = (InsuranceClaim.Models.CustomerModel)Session["CustomerDataModal"];
}

<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet" />

<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>

<div class="top-banner-section">
    <div class="container">
        <div class="car-insurance-content">
            <h2>Get Car License In Less<br>Than 5 Minutes<h2>
        </div>
    </div>
</div>

<div class="body-content-section">
    <div class="form-section-top">
        <div class="container">
            <div class="row bs-wizard">
                <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2">
                    <div class="Process-step-section process-block">

                        <div class="col-sm-12 bs-wizard-step active">
                            <!-- complete -->
                            <div class="progress"><div class="progress-bar"></div></div>
                            <a href="#" class="bs-wizard-dot"></a>
                            <div class="text-center bs-wizard-stepnum">Risk Details</div>
                        </div>

                        <div class="col-sm-12 bs-wizard-step disabled">
                            <!-- active -->
                            <div class="progress"><div class="progress-bar"></div></div>
                            <a href="#" class="bs-wizard-dot"></a>
                            <div class="text-center bs-wizard-stepnum">Summary Details</div>
                        </div>

                        <div class="col-sm-12 bs-wizard-step disabled">
                            <!-- active -->
                            <div class="progress"><div class="progress-bar"></div></div>
                            <a href="#" class="bs-wizard-dot"></a>
                            <div class="text-center bs-wizard-stepnum">Payment Details</div>
                        </div>

                    </div>
                </div>


                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 form-section-col">
                    @using (Html.BeginForm("GenerateQuote", "License"))
                    {
                        <div>
                            @Html.HiddenFor(m => m.PolicyId)
                            @Html.HiddenFor(m => m.Id)
                            @Html.HiddenFor(m => m.isUpdate)
                            @Html.HiddenFor(m => m.vehicleindex)
                            @Html.HiddenFor(m => m.PassengerAccidentCoverAmount)
                            @Html.HiddenFor(m => m.ExcessBuyBackAmount)
                            @Html.HiddenFor(m => m.MedicalExpensesAmount)
                            @Html.HiddenFor(m => m.RoadsideAssistanceAmount)
                            @Html.HiddenFor(m => m.PassengerAccidentCoverAmountPerPerson)
                            @Html.HiddenFor(m => m.ExcessBuyBackPercentage)
                            @Html.HiddenFor(m => m.RoadsideAssistancePercentage)
                            @Html.HiddenFor(m => m.MedicalExpensesPercentage)
                            @Html.HiddenFor(m => m.ExcessAmount)
                            @Html.HiddenFor(m => m.AnnualRiskPremium)
                            @Html.HiddenFor(m => m.QuaterlyRiskPremium)
                            @Html.HiddenFor(m => m.TermlyRiskPremium)
                            @Html.Hidden("isVehicleRegisteredonICEcash")
                            @Html.Hidden("basicPremiumICEcash")
                            @Html.Hidden("stampDutyICEcash")
                            @Html.Hidden("LevyICEcash")
                            @Html.HiddenFor(m => m.ErrorMessage)
                            @Html.HiddenFor(m => m.InsuranceId)
                            @Html.HiddenFor(m => m.LicenseId)
                            @Html.HiddenFor(m => m.LicExpiryDate)
                            @Html.HiddenFor(m => m.CombinedID)
                            @Html.HiddenFor(m => m.PaymentTermId)
                            @Html.HiddenFor(m => m.SummaryId)

                        </div>


                        <div class="form-group-section">

                            <div class="form-title">
                                <h4>License Details </h4>
                                <br />
                                <span> Name: <b>@customerDetail.FirstName  @customerDetail.LastName </b>,  Email: <b>@customerDetail.EmailAddress </b>  </span>
                            </div>

                            @*<div id="divVehicleList" style="display:block;">
                                    <table class="table table-striped" id="tblVehicleList">
                                        <thead>
                                            <tr>
                                                <th>Make</th>
                                                <th>Model</th>
                                                <th>Cover Type</th>
                                                <th>Currency</th>
                                                <th>Sum Insured</th>
                                                <th>Premium</th>
                                                <th style="text-align: center;">Option(s)</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                        <tfoot style="background: white;font-weight:bold;">
                                            <tr><td colspan="5">Total Premium</td><td colspan="2" id="tdTotalPremium">0.00</td></tr>
                                        </tfoot>
                                    </table>
                                    <hr class="higlighter" />
                                </div>*@

                            <div class="form-group-input">
                                <div id="contact-form" class="contact-form">
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Vehicle Number", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.NoOfCarsCovered, new { @placeholder = "Vehicle Number", @autocomplete = "off", @class = "form-control", @maxlength = "2", @readonly = "readonly" })



                                                @Html.ValidationMessageFor(m => m.NoOfCarsCovered, "", new { @class = "text-danger" })
                                                @Html.ValidationMessageFor(m => m.NoOfCarsCovered, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Registration No", new { @class = "gender-label" })
                                                @*@Html.TextBoxFor(m => m.RegistrationNo, new { @class = "form-control", @autocomplete = "off", @placeholder = "Vehicle Registration Number" })*@
                                               
                                                @Html.DropDownListFor(x => x.RegistrationNo, new SelectList(ViewBag.Vehicles, "RegistrationNo", "RegistrationNo"), new { @class = "form-control" })

                                                 @Html.ValidationMessageFor(m => m.RegistrationNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">

                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                              
                                                @Html.Label("Product", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.ProductId, new SelectList(ViewBag.Products, "Id", "ProductName"), "Select Product Type", new { @class = "form-control" })
                                               
                                                 @Html.ValidationMessageFor(x => x.ProductId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>


                                    <hr class="higlighter" />
                                    <div class="row">

                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div id="thirdpartycheck" class="form-group">
                                                @Html.Label("Include VehicleLicence Fee", new { @class = "gender-label" })
                                                @Html.CheckBoxFor(x => x.IncludeLicenseFee, new { @style = "width: 40px;height: 36px;" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div id="thirdpartycheck" class="form-group">
                                                @Html.Label("Include Radio License Cost", new { @class = "gender-label" })
                                                @Html.CheckBoxFor(x => x.IncludeRadioLicenseCost, new { @style = "width: 40px;height: 36px;" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">

                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group" id="divVehicleLicense">
                                                @Html.Label("Vehicle Licence Payment Term", new { @class = "gender-label" })
                                                @*@Html.DropDownListFor(x => x.PaymentTermId, ViewBag.ePaymentTermData as SelectList, "Select Payment Term", new { @class = "form-control" })*@
                                                @Html.DropDownListFor(x => x.ZinaraLicensePaymentTermId, new SelectList(ViewBag.VehicleLicensePaymentTermId, "Id", "Name"), "Select Payment Term", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(x => x.ZinaraLicensePaymentTermId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group" id="divRadioLicense">
                                                @Html.Label("Radio License Payment Term", new { @class = "gender-label" })                                     
                                                @Html.DropDownListFor(x => x.RadioLicensePaymentTermId, new SelectList(ViewBag.RadioLicensePaymentTermId, "Id", "Name"), "Select Payment Term", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(x => x.RadioLicensePaymentTermId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                    <hr class="higlighter" />

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-select">
                                            <div class="form-group">
                                                @Html.Label("Currency", new { @class = "gender-label" })
                                                @Html.DropDownListFor(x => x.CurrencyId, new SelectList(ViewBag.Currencies, "Id", "Name"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>


                                    <hr class="higlighter" />

                                    <div id="thridparty" class="row">
                                        <div class="col-sm-3 col-md-3 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Arrears Fee", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.ArrearsAmt, new { @class = "form-control inputDisabled", @autocomplete = "off", @value = "0" })
                                            </div>
                                        </div>

                                        <div class="col-sm-3 col-md-3 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Penalties", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.PenaltiesAmt, new { @class = "form-control inputDisabled", @autocomplete = "off" })
                                            </div>
                                        </div>

                                        <div class="col-sm-3 col-md-3 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Transaction fee", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.TransactionAmt, new { @class = "form-control ", @autocomplete = "off" })
                                            </div>
                                        </div>

                                        <div class="col-sm-3 col-md-3 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Administration fee", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.AdministrationAmt, new { @class = "form-control ", @autocomplete = "off" })
                                            </div>
                                        </div>


                                    </div>

                                    <div id="thridparty" class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Vehicle Licence Fee", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.VehicleLicenceFee, new { @class = "form-control ", @autocomplete = "off" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("Radio License Cost", new { @class = "gender-label" })
                                                @Html.TextBoxFor(m => m.RadioLicenseCost, new { @class = "form-control ", @autocomplete = "off" })
                                                @Html.ValidationMessageFor(m => m.RadioLicenseCost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>


                                    <hr class="higlighter" />
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-12 next-btn">
                                            <div class="row">
                                                <div class="col-sm-6 col-md-6" )>
                                                    <div class="text-right">
                                                        <button type="submit" id="btnGenerateQuote" class="btn" style="padding:20px 10px;width: auto;">Submit & Generate Quote</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>

                        <div class="container">
                            <!-- Modal -->
                            <div class="modal fade" id="myAddressModal" role="dialog">
                                <div class="modal-dialog">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">License Delivery Address</h4>
                                        </div>
                                        <div class="modal-body">
                                            <form class="form-horizontal" role="form" id="licenseDeliveryForm">
                                                <div class="form-group">
                                                    <label class="col-sm-2 control-label"
                                                           for="inputaddress1">Address1</label>
                                                    <div class="col-sm-10">
                                                        <input type="text" class="form-control"
                                                               id="inputaddress1" placeholder="Address1" name="LicenseAddress1" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-sm-2 control-label"
                                                           for="inputaddress2">Address2</label>
                                                    <div class="col-sm-10">
                                                        <input type="text" class="form-control"
                                                               id="inputaddress2" placeholder="Address2" name="LicenseAddress2" />
                                                    </div>
                                                </div>
                                                <div class="form-group">

                                                    <label class="col-sm-2 control-label"
                                                           for="inputcity">City</label>
                                                    <div class="col-sm-10">
                                                        <select class="form-control" id="inputcity" name="LicenseCity">
                                                            <option value="">----Select City----</option>
                                                            <option value="Harare">Harare</option>
                                                            <option value="Bulawayo">Bulawayo</option>
                                                            <option selected="selected" value="Chitungwiza">Chitungwiza</option>
                                                            <option value="Mutare">Mutare</option>
                                                            <option value="Epworth">Epworth</option>
                                                            <option value="Gweru">Gweru</option>
                                                            <option value="Kwekwe">Kwekwe</option>
                                                            <option value="Kadoma">Kadoma</option>
                                                            <option value="Masvingo">Masvingo</option>
                                                            <option value="Chinhoyi">Chinhoyi</option>
                                                            <option value="Norton">Norton</option>
                                                            <option value="Marondera">Marondera</option>
                                                            <option value="Ruwa">Ruwa</option>
                                                            <option value="Chegutu">Chegutu</option>
                                                            <option value="Zvishavane">Zvishavane</option>
                                                            <option value="Bindura">Bindura</option>
                                                            <option value="Beitbridge">Beitbridge</option>
                                                            <option value="Redcliff">Redcliff</option>
                                                            <option value="Victoria Falls">Victoria Falls</option>
                                                            <option value="Rusape">Rusape</option>
                                                            <option value="Chiredzi">Chiredzi</option>
                                                            <option value="Kariba">Kariba</option>
                                                            <option value="Karoi">Karoi</option>
                                                            <option value="Chipinge">Chipinge</option>
                                                            <option value="Gokwe">Gokwe</option>
                                                            <option value="Shurugwi">Shurugwi</option>
                                                            <option value="Gwanda">Gwanda</option>
                                                        </select>

                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-2 control-label"
                                                           for="inputaddress2">Receipt Date</label>
                                                    <div class="col-sm-10">
                                                        <div class='input-group' id='receiptdatepicker'>
                                                            @Html.TextBoxFor(x => x.ReceiptDate, new { @class = "form-control", @autocomplete = "off", @placeholder = "Receipt date" })
                                                            <span class="input-group-addon">
                                                                <span class="glyphicon glyphicon-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <div class="col-sm-offset-2 col-sm-10">
                                                        <div class="checkbox">
                                                            <label>
                                                                <input type="checkbox" id="inputcheckbox" /> Same As Permanent Address
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>

                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                            <button type="submit" class="btn btn-primary">Save changes</button>
                                        </div>
                                    </div>

                                </div>
                            </div>



                            <!-- Modal -->
                            <div class="modal fade" id="modelGoogleMap" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Google Map</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <div id="map"></div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC8k7mxHV3-Md1VyrQluTgygCpkf2HrY7c&callback=initMap">
</script>

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script src="~/Scripts/googleMap.js"></script>


<script>

    function gotoPeriviouse() {
        location.href = '@Url.Action("Index", "CustomerRegistration", new { id=-1 })';
    }

    function cancelUpdate() {
        location.href = '@Url.Action("RiskDetail", "CustomerRegistration", new { id=0 })';
    }

    function redirectToSummary() {
        location.href = '@Url.Action("SummaryDetail", "CustomerRegistration")';
    }


    $("#btnGenerateQuote").click(function(){
        if ($("#IsLicenseDiskNeeded").is(":checked")){

            $("#myAddressModal").modal('show');
            return false;
        }

    });

    $("#btnAddVehicle").click(function(){
        if ($("#IsLicenseDiskNeeded").is(":checked")){
            $("#myAddressModal").modal('show');
            return false;
        }
    });


    
    $("#IncludeRadioLicenseCost").click(function () {
        debugger;
        if ($(this).is(":checked")) {            
            } else {
                $("#RadioLicenseCost").val('');
            }
        });
   


    $("#inputcheckbox").click(function(){
        var isChecked = $("#inputcheckbox").is(":checked");
        if (isChecked == true)
        {
            $.ajax({
                url: "@Url.Action("GetLicenseAddress", "CustomerRegistration")",
                type: "GET",
                dataType: "json",
                success: function (result) {
                    debugger;
                    $("#inputaddress1").val(result.LicenseAddress1);
                    $("#inputaddress1").addClass("inputDisabled");
                    $("#inputaddress2").val(result.LicenseAddress2);
                    $("#inputaddress2").addClass("inputDisabled");
                    $("#inputcity").val(result.LicenseCity);
                    $("#inputcity").addClass("inputDisabled");
                }
            });
        }
        else
        {
            //alert("unChecked case");
            //1. Emptying controls
            $("#inputaddress1").val("");
            $("#inputaddress1").removeClass("inputDisabled");
            $("#inputaddress2").val("");
            $("#inputaddress2").removeClass("inputDisabled");
            $("#inputcity").val("");
            $("#inputcity").removeClass("inputDisabled");
        }
    });



    function ClearLicenseIfNotChek()
    {
        if (!$("#IncludeLicenseFee").is(":checked"))
        {
            $("#LicenseId").val("");
            $("#VehicleLicenceFee").val("");
            $("#LicExpiryDate").val("");
            //$("#VehicleLicenceFee").addClass("inputDisabled");

            //$("#divVehicleLicense").hide();

        }
        else
        {
            // $("#divVehicleLicense").show();
            //  $("#VehicleLicenceFee").removeClass("inputDisabled");

            var licensePaymentTermId= $("#ZinaraLicensePaymentTermId").val();

            if(licensePaymentTermId!="")
            {
                $(".loading-area").show();
                setTimeout(function(){
                    $(".loading-area").hide();
                    CalculatePremiumByCoverType();
                }, 1000);
            }




        }
    }



    //$("#ZinaraLicensePaymentTermId").change(function() {
    //    var IsVehicleLicense = $("#IncludeLicenseFee").is(":checked");
    //    var vehicleLicensePaymentTerm = $("#ZinaraLicensePaymentTermId").val();

    //    if ( $("#RegistrationNo").val() != "" && $("#ProductId").val() != ""  && IsVehicleLicense==true && vehicleLicensePaymentTerm!="")
    //    {
    //        $(".loading-area").show();
    //        setTimeout(function(){
    //            $(".loading-area").hide();
    //            CalculatePremiumByCoverType();
    //        }, 1000);
    //    }



    //});

    //$("#RadioLicensePaymentTermId").change(function() {

    //    var IsRadioLicense = $("#IncludeRadioLicenseCost").is(":checked");
    //    var radioLicensePaymentTerm = $("#RadioLicensePaymentTermId").val();


    //    if ($("#ProductId").val() != "" && $("#RegistrationNo").val() != "" && IsRadioLicense==true && radioLicensePaymentTerm!="")
    //    {
    //        $(".loading-area").show();
    //        setTimeout(function(){
    //            $(".loading-area").hide();
    //            CalculatePremiumByCoverType();
    //        }, 1000);
    //    }

    //});


    function ValidateSumInsured()
    {
        debugger;

        var currencyId= $("#CurrencyId").val();

        $(".loading-area").show();
        $.ajax({
            url: "@Url.Action("ValidateSumInsured", "CustomerRegistration")",
            type: "POST",
            data: { vehicleUsageId:  $("#VehicleUsage").val(), currencyId: currencyId},
            dataType: "json",
            success: function (result) {
                debugger;

                var sumInsuredAmount = $("#SumInsured").val();

                if(sumInsuredAmount<result)
                {
                    toastr.error("Sum Insured amount should be greater or equal to " + result);

                }
                $(".loading-area").hide();
            }
        });
    }
</script>


<script type="text/javascript">
    var today;
    var isReinsuranceConfirmed = false;
    var areasArray = [];
    function getVehicleList() {
        $.ajax({
            url: "@Url.Action("getVehicleList", "CustomerRegistration")",
            type: "GET",
            dataType: "json",
            success: function (result) {
                var list = result;

                var bodyHTML = "";
                var count = 0;
                var totalpremium = 0.00;
                $.each(list, function (index, value) {
                    count++;

                    var premiumWithDiscount=  parseFloat(value.premium) + parseFloat(value.Discount) ;

                    bodyHTML += "<tr><td>" + value.make + "</td><td>" + value.model + "</td><td>" + value.covertype + "</td><td>" + value.CurrencyName + "</td><td>"  + value.suminsured + "</td><td>" + premiumWithDiscount + "</td><td><div class='tbl-btn-list'><ul class='list-inline'><li><button type='button' onclick='EditVehicleDetails(" + count + ")' class = 'btn-sm btn-primary' >Edit</button></li><li><button type='button' onclick='DeleteVehicleDetails(" + count + ")' class='btn-sm btn-danger' >Delete</button></li></ul></div></td></tr>"
                    totalpremium += parseFloat(value.premium);
                });

                $("#tdTotalPremium").text(totalpremium);

                $("#tblVehicleList tbody").append(bodyHTML);

                if (bodyHTML != "") {
                    $("#divVehicleList").css("display", "block");
                }
                else {
                    $("#divVehicleList").css("display", "none");
                }
            }
        });
    }

    function EditVehicleDetails(index) {

        debugger;
        var redirecturl = '@Url.Action("RiskDetail", "ContactCentre", new { id= 0 })';
        redirecturl = redirecturl.replace("0", index);
        location.href = redirecturl;


    }

    function DeleteVehicleDetails(index) {
        var obj = {};
        obj.index = index;

        $.ajax({
            url: "@Url.Action("DeleteVehicle", "CustomerRegistration")",
            data: obj,
            type: "POST",
            dataType: "json",
            success: function (result) {
                if (result) {
                    location.href = '@Url.Action("RiskDetail", "CustomerRegistration")';
                }
            }
        });
    }

    function GetVehicleUsage()
    {
        $.ajax({
            url: "@Url.Action("GetVehicleUsage", "CustomerRegistration")",
            type: "POST",
            data: { ProductId: $("#ProductId").val() },
            dataType: "json",
            success: function (result) {
                debugger;
                var $dropdown = $("#VehicleUsage");
                $dropdown.empty();
                $.each(result, function () {
                    $dropdown.append($("<option />").val(this.Id).text(this.VehUsage));
                });

            }
        });
    }


    function GetRadioLicenseCost(){

        if(!$("#IncludeRadioLicenseCost").is(':checked'))
        {
            $("#RadioLicenseCost").val("");
        }
        else
        {
            var RadioLicensePaymentTermId = $("#RadioLicensePaymentTermId").val();

            if(RadioLicensePaymentTermId!="")
            {
                $(".loading-area").show();
                setTimeout(function(){
                    $(".loading-area").hide();
                    CalculatePremiumByCoverType();
                }, 1000);
            }
        }

    }

    function ValidateRadioLicense()
    {
        var isLicense = $("#IncludeLicenseFee").is(':checked');
        var isRadioLicense = $("#IncludeRadioLicenseCost").is(':checked');

        if(isRadioLicense && !isLicense)
        {
            toastr.warning("Only Radio license will be not allowed.");
            $("#IncludeRadioLicenseCost").prop("checked", false);
        }
    }




    $(document).ready(function () {






        $("#datetimepicker2").datetimepicker({
            format: 'MM/D/YYYY',
            minDate: new Date()
        })
        $("#datetimepicker1").datetimepicker({
            format: 'MM/D/YYYY',
            minDate: new Date()
        }).on('dp.change', function (e) {
            debugger;
            var incrementDay = moment(new Date(e.date));
            incrementDay.add(1, 'days');
            $('#datetimepicker2').data('DateTimePicker').minDate(incrementDay);
            $(this).data("DateTimePicker").hide();
            updateEndDate();
        });

        $('#receiptdatepicker').datetimepicker({
            format: 'MM/D/YYYY',
            minDate: new Date()
        });


        var data= '@Model.isUpdate';
        if (data == 'True') {
            $("#CoverEndDate").val('@(Model.CoverEndDate != null ? Model.CoverEndDate.Value.ToString("MM/dd/yyyy") : DateTime.Now.ToString("MM/dd/yyyy"))');

        }

        if('@Model.CombinedID'!=null && '@Model.CombinedID'!='')
        {
            $('#IncludeLicenseFee').prop('checked', true);
        }


        if('@Model.ErrorMessage' !="")
        {
            toastr.error('@Model.ErrorMessage');
            $("fieldset").removeAttr("disabled");
        }


        //$("#isVehicleRegisteredonICEcash").val(0);

        debugger;

        if ('@Model.ProductId' != null && '@Model.ProductId' > 0)
        {
            $("#ProductId").val('@Model.ProductId');
        }

        if ('@Model.RadioLicensePaymentTermId' != null && '@Model.RadioLicensePaymentTermId' > 0)
        {
            $("#RadioLicensePaymentTermId").val('@Model.RadioLicensePaymentTermId');
        }


    });




    ////////////////////


    $(function () {

        $("#ProductId").change(function () {
            CalculatePremiumByCoverType();
        });

        $("#ZinaraLicensePaymentTermId").change(function () {
            CalculatePremiumByCoverType();
        });
        $("#RadioLicensePaymentTermId").change(function () {
            CalculatePremiumByCoverType();
        });

        $("#CurrencyId").change(function () {
            var coverType = $("#CoverTypeId").val();
            var sumInsured = $("#SumInsured").val();
            //QuoteCalculation();
        });

    });


    function CalculatePremiumByCoverType()
    {
        if ($("#RegistrationNo").val() != "" && $("#ProductId").val() != ""  && $("#ZinaraLicensePaymentTermId").val() != "" )
        {
            $(".loading-area").show();
            setTimeout(function(){
                $(".loading-area").hide();
                generateQuotewithICEcash();
            }, 1000);
        }
    }

    $("#TaxClassId").change(function() {
        $(".loading-area").show();
        setTimeout(function(){
            $(".loading-area").hide();
            CalculatePremiumByCoverType();
        }, 1000);
    });


    function generateQuotewithICEcash() {
        debugger
        var flag = true;
        var isLicense = $("#IncludeLicenseFee").is(':checked');
        var isRadioLicense = $("#IncludeRadioLicenseCost").is(':checked');

        var licensePaymentTerm = $("#ZinaraLicensePaymentTermId").val();
        var radioPaymentTerm = $("#RadioLicensePaymentTermId").val();

        if(isLicense==true && licensePaymentTerm=="")
        {
            flag = false;
            toastr.warning("Please Select A Payment Term of Vehicle license !!");
        }

        if(isRadioLicense==true && radioPaymentTerm=="")
        {
            flag = false;
            toastr.warning("Please Select A Payment Term of Radio license !!");
        }

        if(isRadioLicense && !isLicense)
        {
            toastr.warning("Only Radio license will be not allowed.");
            $("#IncludeRadioLicenseCost").prop("checked", false);
            flag = false;
        }

        //ValidateRadioLicense();

        if(flag)
        {
            $(".loading-area").show();
            $.ajax({
                async: false,
                cache: false,
                type: "POST",
                url: "@Url.Action("getLicenseDetailsFromICEcash", "CustomerRegistration")",
                data: { regNo: $("#RegistrationNo").val(), ProductId : $("#ProductId").val(), zinaraPaymentTermId : $("#ZinaraLicensePaymentTermId").val(), radioPaymentTermId : $("#RadioLicensePaymentTermId").val(),VehilceLicense : isLicense, RadioLicense:isRadioLicense  },
                success: function (data) {
                    debugger;
                    if (data.result == 0) {
                        toastr.error(data.message);
                        $("fieldset").removeAttr("disabled");
                        $("#LicenseId").val("");
                        $("#ArrearsAmt").val("0");
                        $("#PenaltiesAmt").val("0");
                        $("#VehicleLicenceFee").val("0");
                        $("#RadioLicenseCost").val("0");
                        $("#LicExpiryDate").val("");
                        $("#CombinedID").val("");
                        $("#isVehicleRegisteredonICEcash").val(0);
                    }
                    if (data.result == 1) {
                        if(data.Data.Response.Quotes[0]!=null)
                        {
                            $("#LicenseId").val(data.Data.Response.Quotes[0].LicenceID);
                            var arrAmount = parseFloat(data.Data.Response.Quotes[0].ArrearsAmt).toFixed(2);
                            var penaltiesAmount = parseFloat(data.Data.Response.Quotes[0].PenaltiesAmt).toFixed(2);
                            var transactionAmt = parseFloat(data.Data.Response.Quotes[0].TransactionAmt).toFixed(2);
                            var administrationAmt = parseFloat(data.Data.Response.Quotes[0].AdministrationAmt).toFixed(2);

                            $("#ArrearsAmt").val(arrAmount);
                            $("#PenaltiesAmt").val(penaltiesAmount);
                            $("#TransactionAmt").val(transactionAmt);
                            $("#AdministrationAmt").val(administrationAmt);

                            if(isRadioLicense)
                            {
                                $("#RadioLicenseCost").val(parseFloat(data.Data.Response.Quotes[0].TotalRadioTVAmt).toFixed(2));
                            }
                            else
                            {
                                $("#RadioLicenseCost").val("");
                            }


                            var totalLicFee= arrAmount+ penaltiesAmount + transactionAmt + administrationAmt;
                            $("#VehicleLicenceFee").val(parseFloat(data.Data.Response.Quotes[0].TotalLicAmt).toFixed(2) );
                            $("#LicExpiryDate").val(data.Data.Response.Quotes[0].LicExpiryDate);
                            $("#CombinedID").val(data.Data.Response.Quotes[0].CombinedID);
                        }

                        $(".loading-area").hide();
                    }
                    else
                    {
                        $(".loading-area").hide();
                    }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $(".loading-area").hide();
                    if (textStatus == 'timeout') {
                        $(".loading-area").hide();
                    } else if (textStatus == 'error') {
                        $(".loading-area").hide();
                    }
                } //EINDE error
            }); //EINDE ajax
        }

        $(".loading-area").hide();
    }

</script>


